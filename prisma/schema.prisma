// schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User who chats with the bot
model User {
  id            String         @id @default(cuid())
  phoneNumber   String         @unique
  name          String?
  conversations Conversation[]
  media         Media[]
  createdAt     DateTime       @default(now())
}

// Group chat information
model Group {
  id            String         @id @default(cuid())
  groupId       String         @unique // WhatsApp group ID (without @g.us)
  name          String?
  conversations Conversation[]
  media         Media[]        // Media files shared in this group
  createdAt     DateTime       @default(now())
}

// A conversation thread (can reset for new topics)
model Conversation {
  id        String    @id @default(cuid())
  user      User?     @relation(fields: [userId], references: [id])
  userId    String?
  group     Group?    @relation(fields: [groupId], references: [id])
  groupId   String?
  messages  Message[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

// Messages in a conversation
model Message {
  id             String        @id @default(cuid())
  role           Role
  content        String?       // text content
  mediaId        String?       // if media is attached
  media          Media?        @relation(fields: [mediaId], references: [id])
  conversation   Conversation  @relation(fields: [conversationId], references: [id])
  conversationId String
  createdAt      DateTime      @default(now())
}

enum Role {
  USER
  ASSISTANT
  SYSTEM
}

// Media files uploaded (image/pdf/etc.)
model Media {
  id        String    @id @default(cuid())
  url       String    // where the file is stored (S3/Cloudinary/local)
  type      String    // "image", "pdf", etc.
  summary   String?   // optional AI-generated summary/parsed text
  user      User?     @relation(fields: [userId], references: [id])
  userId    String?
  group     Group?    @relation(fields: [groupId], references: [id])
  groupId   String?
  messages  Message[] // relation to messages that use this media
  createdAt DateTime  @default(now())
}
